//GongSun_ink 2022

//英雄技能选择界面点击触发
void onHeroSkillPickPanelClick(){
    int column;
    int row;
    gameSoundPlayer(v_additionalSelect);
    for (column = 0; column < 5; column += 1) {
        for (row = 0; row < 5; row += 1) {
            //判断是哪一个技能按键
            if (EventDialogControl() == gv_BB156610.lv_52872E19[column][row]){
                if (isAbilityBtnVisiable(row,column,testModePlayer)){
                    abilityPickBtnUI(row,column,true,testModePlayerGroup);
                    abilityPickData(row,column,getPlayerLastPicked());
                }else{
                    abilityPickBtnUI(row,column,false,testModePlayerGroup);
                    abilityPickData(0,column,getPlayerLastPicked());
                }
            }
        }    
    }
}

//天赋界面点击触发，选择后再点击取消选择
void onTalentSelectPanelClick(){
    int row;
    int column;

    int player = DataTableGetInt(true,"player");

    gameSoundPlayer(v_additionalSelect);
    //暴力判断找到控件对应数组的位置
    for (row = 0; row < 18; row += 1)
    {
        for (column = 0; column < 5; column += 1)
        {
            if (EventDialogControl() == gv_BB156610.lv_18A4806A[column][row])
            {
                //如果已经选中
                if (isTalentSelected(row,column,player))
                {
                    talentSelectData(row,column,false,player);
                    talentSelectUI(row,column,false,testModePlayerGroup);
                }
                //如果没有被选择
                else
                {
                    talentSelectData(row,column,true,player);
                    talentSelectUI(row,column,true,testModePlayerGroup);
                }
            }
        }
    }
}

bool onGameUIClick(bool t, bool r){

    int eDialogControl = EventDialogControl();
    int rootDialog = DialogControlGetDialog(eDialogControl);

    if (rootDialog == gv_277B64A1){
        DataTableSetInt(true,"heroId",(EventDialogControl() - gv_749EC876[0][0]) / 3);

        gameSoundPlayer(v_heroSelect);
        libNtve_gf_SetDialogItemImage(Dialogs.main_menu.heroSelectBtn.img,gv_AA1BDB6C[DataTableGetInt(true,"heroId")],testModePlayerGroup);
        libNtve_gf_SetDialogItemTooltip(Dialogs.main_menu.heroSelectBtn.btn,
            StringExternal(("Button/Tooltip/btn_line_ability_" + gf_45491ABD(DataTableGetInt(true,"heroId")) + "_s")),testModePlayerGroup);

        GamePanelShow(c_UIType_heroSelect,false,testModePlayerGroup);
    }
    else if (rootDialog == gv_BB156610.lv_5C8CC8E9[0] ||
        rootDialog == gv_BB156610.lv_5C8CC8E9[1] ||
        rootDialog == gv_BB156610.lv_5C8CC8E9[2] ||
        rootDialog == gv_BB156610.lv_5C8CC8E9[3] ||
        rootDialog == gv_BB156610.lv_5C8CC8E9[4]){
        onTalentSelectPanelClick();
    }
    //技能选择
    else if (rootDialog == gv_BB156610.lv_DC4A4CA5[0] ||
        rootDialog == gv_BB156610.lv_DC4A4CA5[1] ||
        rootDialog == gv_BB156610.lv_DC4A4CA5[2] || 
        rootDialog == gv_BB156610.lv_DC4A4CA5[3] ||
        rootDialog == gv_BB156610.lv_DC4A4CA5[4]){
        onHeroSkillPickPanelClick();
    }
    //选择按钮
    else if (eDialogControl == SELECT_BTN){
        if (DialogIsVisible(gv_BB156610.lv_5C8CC8E9[3], 1)){
            GamePanelShow(c_UIType_talentSelect,false,testModePlayerGroup);
            GamePanelShow(c_UIType_SKillSelect,true,testModePlayerGroup);
        }
        else if (DialogIsVisible(gv_BB156610.lv_DC4A4CA5[0], 1)){
            GamePanelShow(c_UIType_SKillSelect,false,testModePlayerGroup);
            playerSummonHero();
            DataTableSetUnit(true,"heroselected",gv_71C054E5[getPlayerLastPicked()]);
            summoning = false;
        }
    } 
    return true;
}



bool onUnitClick(bool t, bool r){
    unit eUnit = EventUnit();
    int newUnitOwner = UnitGetOwner(eUnit);
    int i;

    if (newUnitOwner == 0){
        showHideDummyHud(true,testModePlayerGroup);
        return true;
    }
    
    //取消选择
    UnitSelect(getTestPlayerCurrentSelectedUnit(), testModePlayer, false);
    //移除不可选中效果
    UnitBehaviorRemove(eUnit, "nodie2", 1);
    UIAlertUnit("MyClickLocations", testModePlayer, EMP_TEXT, null, eUnit);
    storeUpgradeBtns(UnitGetOwner(getTestPlayerCurrentSelectedUnit()));
    //--------------------------
    //选择新单位
    UnitSelect(eUnit, testModePlayer, true);
    setTestPlayerCurrentSelectedUnit(eUnit);
    updateGameUI(newUnitOwner,testModePlayerGroup);
    restoreUpgradeBtns(newUnitOwner,testModePlayerGroup);

    return true;
}

bool onKeyEsc(bool t, bool r){

    showHideDummyHud(false,testModePlayerGroup);
    
    return true;
}

void initGameUITrigger(){
    trigger t = TriggerCreate("onGameUIClick");
    trigger t1 = TriggerCreate("onUnitClick");
    trigger t2 = TriggerCreate("onKeyEsc");

    TriggerAddEventDialogControl(t,1,c_invalidDialogControlId,c_triggerControlEventTypeClick);
    TriggerAddEventUnitClick(t1,null,testModePlayer);
    TriggerAddEventKeyPressed(t2,testModePlayer,c_keyEscape, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);

    DataTableSetTrigger(true,"trigger-onGameUIClick",t);
    DataTableSetTrigger(true,"onUnitClick",t1);
}
