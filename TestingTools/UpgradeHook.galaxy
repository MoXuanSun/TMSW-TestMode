//GongSun_ink 2022

//1.英雄创建时，让玩家选中此英雄，并展示技能按钮
//2.点击其他英雄时，保存当前英雄可以点击的按钮，展示点击英雄的升级按钮
//3.英雄升级时，展示升级按钮(由于必须选中才能升级，所以不需要判断是否选中)
//4.一次升级后如果有多余的升级点，则再次展示升级按钮

void refractUpgradeBtns(int player, playergroup p){
    int i;

    for (;i < 4; i+=1){
        if (DialogControlIsVisible(gv_81AD7FB9[i],player)){
            DialogControlSetVisible(gv_81AD7FB9[i],p,true);
            DialogControlSetVisible(gv_99F9B79B[i],p,true);
            DialogControlSetEnabled(gv_99F9B79B[i],p,true);
        }
        DialogControlSetPropertyAsText(gv_99F9B79B[i],c_triggerControlPropertyTooltip,p,
            DialogControlGetPropertyAsText(gv_99F9B79B[i],c_triggerControlPropertyTooltip,player));
    }
}

bool onUpgradeHotKey(bool t, bool r){

    
    
    return true;
}

bool UnitGainLevelAfter(bool t, bool r){
    int currentPlayer = UnitGetOwner(getTestPlayerCurrentSelectedUnit());

    updateStatusBar(testModePlayer,EventUnit());
    //暂时留着为以后准备
    // if (getTestPlayerCurrentSelectedUnit() == EventUnit() && testModePlayer != currentPlayer){
    //     debug("test");
        refractUpgradeBtns(currentPlayer,testModePlayerGroup);
    // }  
    return true;
}

bool btnClickHook(bool t, bool r){
    int eDialogControl = EventDialogControl();
    int currentPlayer = UnitGetOwner(getTestPlayerCurrentSelectedUnit());
    int i;

    if (eDialogControl == gv_99F9B79B[0] || 
        eDialogControl == gv_99F9B79B[1] || 
        eDialogControl == gv_99F9B79B[2] || 
        eDialogControl == gv_99F9B79B[3]){

            for (; i < 4 ; i += 1){
                upgradeBtnShow(i,false,testModePlayerGroup);
                upgradeBtnShow(i,false,PlayerGroupSingle(currentPlayer));
            }

            if (eDialogControl == gv_99F9B79B[0]){
                gf_19E65221(currentPlayer, gv_99F9B79B[0]);
            }
            else if (eDialogControl == gv_99F9B79B[1]){
                gf_19E65221(currentPlayer, gv_99F9B79B[1]);
            }
            else if (eDialogControl == gv_99F9B79B[2]){
                gf_19E65221(currentPlayer, gv_99F9B79B[2]);
            }
            else if (eDialogControl == gv_99F9B79B[3]){
                gf_19E65221(currentPlayer, gv_99F9B79B[3]);
            }

            if (gv_63B35897[currentPlayer] >= 1){
                refractUpgradeBtns(currentPlayer,testModePlayerGroup);
            }else{
                storeUpgradeBtns(currentPlayer);
            }
    }
    //data-setPlayerPropPoints(int player, int propType, int opt, int value);
    //ui-updatePropPointUI(int player, playergroup p);
    else if ((EventDialogControl() == gv_F4E2C4A0[0][0]) ||
            (EventDialogControl() == gv_F4E2C4A0[0][1]) ||
            (EventDialogControl() == gv_F4E2C4A0[0][2]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][3]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][4]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][5]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][6]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][7]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][8]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][9]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][10]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][11]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][12]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][13]) || 
            (EventDialogControl() == gv_F4E2C4A0[0][14])){
                


        }   


    else {
        TriggerExecute(gt_B5F15D4C,false,true);
    }
    
    return true;
}

void initUpgradeHooker(){
    trigger t1 = TriggerCreate("btnClickHook");
    trigger t2 = TriggerCreate("UnitGainLevelAfter");
    trigger t3 = TriggerCreate("upgradeTooptipChange");

    TriggerAddEventDialogControl(t1,c_playerAny,c_invalidDialogControlId,c_triggerControlEventTypeClick);

    TriggerAddEventUnitGainLevel(t2,null);

    DataTableSetTrigger(true,"trigger-onUpgradeBtnClick",t1);
    // DataTableSetTrigger(true,"trigger-onUpgradeEffectUsed",t);

}