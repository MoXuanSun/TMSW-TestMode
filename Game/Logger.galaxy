//GongSun_ink 2022

void logger(string message,int level){

    string gameTimeS;
    string levelS;
    string finalMessage;

    int i;

    if (showGameTime){
        gameTimeS = "<c val = \"00FFFF\">["+FixedToString(GameGetMissionTime(),2)+"]</c> ";
    }
    if (showLogLevel){
        levelS = "<c val = \""+loggerLevelColor[level]+"\">["+loggerLevelName[level]+"]</c> ";
    }

    finalMessage = gameTimeS + levelS + message;
   
    if (DialogControlGetItemCount(Dialogs.logger.listBoxControl,testModePlayer) >= loggerMessageMAX){
        DialogControlRemoveItem(Dialogs.logger.listBoxControl,testModePlayerGroup,0);
    }

    if (DialogControlGetItemCount(Dialogs.logger.listBoxControl,testModePlayer) > 0){
        DialogControlRemoveItem(Dialogs.logger.listBoxControl,testModePlayerGroup,
            DialogControlGetItemCount(Dialogs.logger.listBoxControl,testModePlayer));
    }

    DialogControlAddItem(Dialogs.logger.listBoxControl,testModePlayerGroup,StringToText(gameTimeS + levelS + message));

    // 每一次都添加一个空的item并选中，下一次再删除在创建，这样就可以自动滑动logger
    DialogControlAddItem(Dialogs.logger.listBoxControl,testModePlayerGroup,EMP_TEXT);

    DialogControlSelectItem(Dialogs.logger.listBoxControl,testModePlayerGroup,
        DialogControlGetItemCount(Dialogs.logger.listBoxControl,testModePlayer));
}

void loggerD(string message){
    logger(message,LOGGER_DEBUG);
}

bool loggerAbility(bool r, bool t){
    
    return true;
}
bool loggerEffect(bool r, bool t){

    return true;
}
bool loggerBehavior(bool r, bool t){

    return true;
}


void initLogger(){
    trigger t1 = TriggerCreate("loggerAbility");
    trigger t2 = TriggerCreate("loggerEffect");
    trigger t3 = TriggerCreate("loggerBehavior");

    loggerLevelColor[0] = "00ff00";
    loggerLevelColor[1] = "0000ff";
    loggerLevelColor[2] = "00ffff";
    loggerLevelColor[3] = "ffff00";
    loggerLevelColor[4] = "ff0000";

    loggerLevelName[0] = "Verbose";
    loggerLevelName[1] = "info";
    loggerLevelName[2] = "debug";
    loggerLevelName[3] = "warn";
    loggerLevelName[4] = "error";

    TriggerAddEventUnitAbility(t1,null,null,c_unitAbilStageAll,false);
    TriggerAddEventPlayerEffectUsed(t2,c_playerAny,null);
    TriggerAddEventUnitBehaviorChange(t3,null,null,c_unitBehaviorChangeAny);
}