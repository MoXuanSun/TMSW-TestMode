//GongSunink 2022

//TestMode conf
const int testModePlayer = 1;
playergroup testModePlayerGroup = PlayerGroupSingle(testModePlayer);
int timerReflashCooldown = 10;
int heroSummon = 19;
string botHero = "dbHero38";
timer damageTimer = TimerCreate();
timer resetTimer = TimerCreate();
bool timerInit;
int mineralsSpent;
string lastBehaviorAdded;
unit botUnit;
fixed botUnitDamagedTotal;
bool flagEmeny;
//正在为选择的英雄选择天赋
bool summoning;

//WARNING----DO NOT CHANGE CODE BELOW THIS LINE IF IT IS NOT NECESSARY----WARNING

//TestingUI
const int TEST_UI_PADDING = 10;
text EMP_TEXT = StringToText("");

struct defaultConstances{
    string DEFAULT_TITLE;
    string DEFAULT_TOOLTIP;
    string DEFAULT_IMG;
    string DEFAULT_BORDERDDS;
    string DEFAULT_BTNIMG;
    string DEFAULT_BTNHOVERIMG;
    playergroup DEFAULT_PLAYERGROUP;
    string DEFAULT_FONTSTYLE;
};
struct moonStyleBtn{
    int border;
    int img;
    int btn;
    int textLabel;
};
typedef moonStyleBtn mBtn;
struct mainMenu{
    int self;
    mBtn heroSelectBtn;
    mBtn summonAllyHeroBtn;
    mBtn summonEnemyHeroBtn;
    mBtn upgradeHeroBtn;
    mBtn noCoolDownBtn;
    mBtn fullmana;
    mBtn removeHeroBtn;
    mBtn visionAreaSetting;
    mBtn nextRound;
    mBtn lastRound;
};
struct Dialog{
    mainMenu main_menu;
};
//所有dialog的管理者对象
Dialog Dialogs;
defaultConstances DEFAULTS;

int createNormalImgControl(int rootDialog,int width, int height, int anchor, 
    int offsetX, int offsetY, string img);
int createNormalImgControlWithRelativePosition(int rootDialog,int width, int height,int relative,
    int relativeAnchor, int offsetX, int offsetY, string img, 
    playergroup inPlayergroup);
int createNormalBtnControl(int rootDialog,int width, int height,int anchor, 
    int offsetX, int offsetY, string tooltip, string title,
    string btnImg, string btnHoverImg, playergroup inPlayergroup);
int createNormalBtnControl(int rootDialog,int width, int height,int anchor, 
    int offsetX, int offsetY, string tooltip, string title,
    string btnImg, string btnHoverImg, playergroup inPlayergroup);
int createNormalBtnControlWithRelativePosition(int rootDialog,int width, int height, int relative , 
    int relativeAnchor, int offsetX, int offsetY, string tooltip, 
    string title,string btnImg, string btnHoverImg, playergroup inPlayergroup);
void createmBtn(structref<mBtn> mBtnRef,
    int rootDialog,
    int borderWidth,int borderHeight, int imgWidth , int imgHeight, int btnWidth, int btnHeight ,
    int anchor , int offsetXFromEdge, int offsetYFromEdge , 
    string borderDDS, string img,
    string tooltip, string title, string fontStyle,
    string btnImg, string btnHoverImg, 
    playergroup inPlayergroup);
void createmBtnRelative(structref<mBtn> mBtnRef,
    int rootDialog,
    int borderWidth,int borderHeight, int imgWidth , int imgHeight, int btnWidth, int btnHeight ,
    int ref , int offsetXFromEdge, int offsetYFromEdge , 
    string borderDDS, string img,
    string tooltip, string title, string fontStyle, 
    string btnImg, string btnHoverImg, 
    playergroup inPlayergroup,
    bool nextLine);

//GameTools
int queryPlayerHeroId(int playerId);
unit queryPlayerHeroUnit(int playerId);
unit getTestPlayerCurrentSelectedUnit();
int getHeroLastSelected();
int getPlayerLastPicked();
void gameSoundPlayer(int type);
int getHeroIdByUnit(unit inUnit);
void debug(string message);
void callUpgradeFunc(int dialogControlId, int player);
void makeAbilityUpgrade(int player);
void removeHero();
void ReflashPlayer();
void removeHeroAndReflashPlayer();

//GameUI
const int c_UIType_heroSelect = 1;
const int c_UIType_talentSelect = 2;
const int c_UIType_additionalSkillSelect = 3;
const int c_UIType_SKillSelect = 4;
const int c_UIType_additionalPropSelect = 5;

const int v_additionalSelect = 1;
const int v_heroSelect = 2;
const int v_roundInit = 3;

const int PROGRESS_TYPE_LIFE = 1;
const int PROGRESS_TYPE_ENERGY = 2;
const int PROGRESS_TYPE_SHIELD = 3;

const int c_PropType_ad = 1;
const int c_PropType_ap = 2;
const int c_PropType_antiAd = 3;
const int c_PropType_antiAp = 4;
const int c_PropType_hp = 5;
const int c_PropType_hpRegen = 8;
const int c_PropType_mana = 6;
const int c_PropType_manaRegen = 7;

const int c_upgradeBtn_q = 0;
const int c_upgradeBtn_w = 1;
const int c_upgradeBtn_e = 2;
const int c_upgradeBtn_r = 3;

int SELECT_BTN;

void updateHeroPropProgressBar(int player,unit inUnit, int type);
void statusBar(int player,unit inUnit);
void talentSelectUI(int row, int column, bool select, playergroup p);
void talentEnableUI(int row, int column, bool enable, playergroup p);
void upgradeBtnShow(int index,bool show, playergroup p);
void upgradeBtnEnable(int index, bool show,playergroup p);
void storeUpgradeBtn(int player, int index, bool show);
void storeUpgradeBtns(int player, playergroup p);
void restoreUpgradeBtns(int player, playergroup p);
void updateAbilityPickPanel(int player, playergroup p);
void abilityPickBtnUI(int row, int column, bool select, playergroup p);
bool isAbilityBtnVisiable(int row, int column, int player);
void GamePanelShow(int type, bool show,playergroup p);
// void makeAbilityUpgrade(int player);

//GameData
bool isTalentSelected(int row, int column, int player);

//Ability

//WARNING END